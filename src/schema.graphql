type Query {
  info: String!
  feed: [Story!]!
  users: [User!]!
  me: User!
}

type Mutation {
  createStory(text: String!): Story!
  deleteStory(id: Int!): delResponse!
  updateStory(id: Int!, text: String!): Story!
  comment(storyId: Int!, text: String!): Comment!
  deleteComment(id: Int): delResponse!
  register(
    username: String!
    email: String!
    password: String!
    confirmedPassword: String!
    isAdmin: Boolean!
  ): AuthPayload
  login(username: String!, password: String!): AuthPayload
  deleteUser(userId: Int!): delResponse
}

type Story {
  id: ID!
  text: String!
  author: User
  comments: [Comment!]!
}

type User {
  id: ID!
  username: String!
  email: String!
  password: String!
  stories: [Story!]!
  comments: [Comment!]!
  isAdmin: Boolean!
}

type Comment {
  id: ID!
  text: String!
  author: User
  story: Story!
}

type AuthPayload {
  token: String!
  user: User
}

type delResponse {
  message: String!
}
